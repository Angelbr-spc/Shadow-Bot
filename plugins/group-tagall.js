const wm = 'ùêíùê°ùêöùêùùê®ùê∞ ùêÅùê®ùê≠ üç∑';

const prefijoABandera = {
  '1': 'üá∫üá∏', '7': 'üá∑üá∫', '20': 'üá™üá¨', '27': 'üáøüá¶', '30': 'üá¨üá∑', '31': 'üá≥üá±', '32': 'üáßüá™', '33': 'üá´üá∑',
  '34': 'üá™üá∏', '36': 'üá≠üá∫', '39': 'üáÆüáπ', '40': 'üá∑üá¥', '41': 'üá®üá≠', '43': 'üá¶üáπ', '44': 'üá¨üáß', '45': 'üá©üá∞',
  '46': 'üá∏üá™', '47': 'üá≥üá¥', '48': 'üáµüá±', '49': 'üá©üá™', '51': 'üáµüá™', '52': 'üá≤üáΩ', '53': 'üá®üá∫', '54': 'üá¶üá∑',
  '55': 'üáßüá∑', '56': 'üá®üá±', '57': 'üá®üá¥', '58': 'üáªüá™', '60': 'üá≤üáæ', '61': 'üá¶üá∫', '62': 'üáÆüá©', '63': 'üáµüá≠',
  '64': 'üá≥üáø', '65': 'üá∏üá¨', '66': 'üáπüá≠', '81': 'üáØüáµ', '82': 'üá∞üá∑', '84': 'üáªüá≥', '86': 'üá®üá≥', '90': 'üáπüá∑',
  '91': 'üáÆüá≥', '92': 'üáµüá∞', '93': 'üá¶üá´', '94': 'üá±üá∞', '95': 'üá≤üá≤', '98': 'üáÆüá∑', '211': 'üá∏üá∏', '212': 'üá≤üá¶',
  '213': 'üá©üáø', '216': 'üáπüá≥', '218': 'üá±üáæ', '220': 'üá¨üá≤', '221': 'üá∏üá≥', '222': 'üá≤üá∑', '223': 'üá≤üá±',
  '224': 'üá¨üá≥', '225': 'üá®üáÆ', '226': 'üáßüá´', '227': 'üá≥üá™', '228': 'üáπüá¨', '229': 'üáßüáØ', '230': 'üá≤üá∫',
  '231': 'üá±üá∑', '232': 'üá∏üá±', '233': 'üá¨üá≠', '234': 'üá≥üá¨', '235': 'üáπüá©', '236': 'üá®üá´', '237': 'üá®üá≤',
  '238': 'üá®üáª', '239': 'üá∏üáπ', '240': 'üá¨üá∂', '241': 'üá¨üá¶', '242': 'üá®üá¨', '243': 'üá®üá©', '244': 'üá¶üá¥',
  '248': 'üá∏üá®', '249': 'üá∏üá©', '250': 'üá∑üáº', '251': 'üá™üáπ', '252': 'üá∏üá¥', '253': 'üá©üáØ', '254': 'üá∞üá™',
  '255': 'üáπüáø', '256': 'üá∫üá¨', '257': 'üáßüáÆ', '258': 'üá≤üáø', '260': 'üáøüá≤', '261': 'üá≤üá¨', '262': 'üá∑üá™',
  '263': 'üáøüáº', '264': 'üá≥üá¶', '265': 'üá≤üáº', '266': 'üá±üá∏', '267': 'üáßüáº', '268': 'üá∏üáø', '269': 'üá∞üá≤',
  '290': 'üá∏üá≠', '291': 'üá™üá∑', '297': 'üá¶üáº', '298': 'üá´üá¥', '299': 'üá¨üá±', '350': 'üá¨üáÆ', '351': 'üáµüáπ',
  '352': 'üá±üá∫', '353': 'üáÆüá™', '354': 'üáÆüá∏', '355': 'üá¶üá±', '356': 'üá≤üáπ', '357': 'üá®üáæ', '358': 'üá´üáÆ',
  '359': 'üáßüá¨', '370': 'üá±üáπ', '371': 'üá±üáª', '372': 'üá™üá™', '373': 'üá≤üá©', '374': 'üá¶üá≤', '375': 'üáßüáæ',
  '376': 'üá¶üá©', '377': 'üá≤üá®', '378': 'üá∏üá≤', '380': 'üá∫üá¶', '381': 'üá∑üá∏', '382': 'üá≤üá™', '385': 'üá≠üá∑',
  '386': 'üá∏üáÆ', '387': 'üáßüá¶', '389': 'üá≤üá∞', '420': 'üá®üáø', '421': 'üá∏üá∞', '423': 'üá±üáÆ', '500': 'üá´üá∞',
  '501': 'üáßüáø', '502': 'üá¨üáπ', '503': 'üá∏üáª', '504': 'üá≠üá≥', '505': 'üá≥üáÆ', '506': 'üá®üá∑', '507': 'üáµüá¶',
  '508': 'üá≤üá´', '509': 'üá≠üáπ', '590': 'üá¨üáµ', '591': 'üáßüá¥', '592': 'üá¨üáæ', '593': 'üá™üá®', '594': 'üá¨üá´',
  '595': 'üáµüáæ', '596': 'üá≤üá∂', '597': 'üá∏üá∑', '598': 'üá∫üáæ', '599': 'üáßüá∂', '670': 'üáπüá±', '672': 'üá¶üá∂',
  '673': 'üáßüá≥', '674': 'üá≥üá∑', '675': 'üáµüá¨', '676': 'üáπüá¥', '677': 'üá∏üáß', '678': 'üáªüá∫', '679': 'üá´üáØ',
  '680': 'üáµüáº', '681': 'üáºüá´', '682': 'üá®üá∞', '683': 'üá≥üá∫', '685': 'üáºüá∏', '686': 'üá∞üáÆ', '687': 'üá≥üá®',
  '688': 'üáπüáª', '689': 'üáµüá´', '690': 'üáπüá∞', '691': 'üá´üá≤', '692': 'üá≤üá≠', '850': 'üá∞üáµ', '852': 'üá≠üá∞',
  '853': 'üá≤üá¥', '855': 'üá∞üá≠', '856': 'üá±üá¶', '880': 'üáßüá©', '886': 'üáπüáº', '960': 'üá≤üáª', '961': 'üá±üáß',
  '962': 'üáØüá¥', '963': 'üá∏üáæ', '964': 'üáÆüá∂', '965': 'üá∞üáº', '966': 'üá∏üá¶', '967': 'üáæüá™', '968': 'üá¥üá≤',
  '970': 'üáµüá∏', '971': 'üá¶üá™', '972': 'üáÆüá±', '973': 'üáßüá≠', '974': 'üá∂üá¶', '975': 'üáßüáπ', '976': 'üá≤üá≥',
  '977': 'üá≥üáµ', '992': 'üáπüáØ', '993': 'üáπüá≤', '994': 'üá¶üáø', '995': 'üá¨üá™', '996': 'üá∞üá¨', '998': 'üá∫üáø'
};

function obtenerBandera(numero) {
  const prefijos = Object.keys(prefijoABandera).sort((a, b) => b.length - a.length);
  for (const prefijo of prefijos) {
    if (numero.startsWith(prefijo)) return prefijoABandera[prefijo];
  }
  return 'üåç';
}

const handler = async (m, { conn, participants, isAdmin, isOwner }) => {
  if (!m.isGroup) return;
  if (!(isAdmin || isOwner)) return global.dfail('admin', m, conn);

  const texto = (m.text || '').trim().replace(/^(\.|)(tagall|invocar|invocacion|invocaci√≥n|todos|talibanes)\s*/i, '');
  let mensaje = `üç∑ ùêàùêçùêïùêéùêÇùêÄùêçùêÉùêé ùêíùêáùêÄùêÉùêéùêñùêí üç∑\n\n${texto ? 'ùêÄùêïùêàùêíùêé: ' + texto + '\n\n' : ''}`;

  for (const user of participants) {
    const numero = user.id.split('@')[0];
    const bandera = obtenerBandera(numero);
    mensaje += `${bandera} @${numero}\n`;
  }

  mensaje += `\n${wm}`;

  await conn.sendMessage(m.chat, {
    text: mensaje,
    mentions: participants.map(p => p.id)
  });
};

handler.customPrefix = /^(\.|)(tagall|invocar|invocacion|invocaci√≥n|todos|talibanes)/i;
handler.command = new RegExp();
handler.group = true;
handler.admin = true;

export default handler;